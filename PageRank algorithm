import networkx as nx
import numpy as np
import matplotlib.pyplot as plt

filename = 'oregon2_010407.txt'
def Power(filename, beta, ite, n, M):
    I = np.ones([n, 1])
    r = 1.0/n * I
    for i in range(ite):
        print(str(i + 1))
        r = (1 - beta)*1.0/n * I + beta * np.dot(M, r)
    return r

def dataInfo(filename):
    V = set()
    f = open(filename)
    for line in f:
        [i, j] = line.split('\t')
        V.add(int(i))
        V.add(int(j))
    f.close()
    V = sorted(V)
    n = len(V)
    M = np.empty([n, n])
    Degree = degree(n, filename)
    for i in range(n):
        for j in range(n):
            de = Degree[j]
            nu = count(j, i, filename)
            if de != 0:
                M[i, j] = nu*1.0/de
            else:
                M[i, j] = 0
    return (n, M)

def degree(n, filename):
    deg = np.empty([n, 1])
    f = open(filename)
    for line in f:
        [i, j] = line.split('\t')
        i = int(i)
        deg[(i - 1), 0] += 1
    f.close()
    return deg
def count(a, b, filename):
    c = 0
    f = open(filename)
    for line in f:
        [i, j] = line.split('\t')
        if int(i) == (a + 1) and int(j) == (b + 1):
            c += 1
    f.close()
    return c

beta = 0.8
ite = 100

n, M = dataInfo(filename)
r = Power(filename, beta, ite, n, M)
print(r)
nx.draw(r, with_labels=True)
plt.show()
